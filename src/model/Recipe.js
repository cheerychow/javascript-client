/**
 * Cheery Chow Recipe API
 * Nutrition and recipe nutrition management API.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: john@cheerychow.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CountryRDA', 'model/IngredientWithNutritionAbbrev', 'model/RecipeNutritionAbbrev'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CountryRDA'), require('./IngredientWithNutritionAbbrev'), require('./RecipeNutritionAbbrev'));
  } else {
    // Browser globals (root is window)
    if (!root.CheeryChowRecipeApi) {
      root.CheeryChowRecipeApi = {};
    }
    root.CheeryChowRecipeApi.Recipe = factory(root.CheeryChowRecipeApi.ApiClient, root.CheeryChowRecipeApi.CountryRDA, root.CheeryChowRecipeApi.IngredientWithNutritionAbbrev, root.CheeryChowRecipeApi.RecipeNutritionAbbrev);
  }
}(this, function(ApiClient, CountryRDA, IngredientWithNutritionAbbrev, RecipeNutritionAbbrev) {
  'use strict';




  /**
   * The Recipe model module.
   * @module model/Recipe
   * @version 0.0.2
   */

  /**
   * Constructs a new <code>Recipe</code>.
   * @alias module:model/Recipe
   * @class
   */
  var exports = function() {
    var _this = this;









































  };

  /**
   * Constructs a <code>Recipe</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Recipe} obj Optional instance to populate.
   * @return {module:model/Recipe} The populated <code>Recipe</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('internal_preload_options')) {
        obj['internal_preload_options'] = ApiClient.convertToType(data['internal_preload_options'], 'Integer');
      }
      if (data.hasOwnProperty('num_matching_ingredients')) {
        obj['num_matching_ingredients'] = ApiClient.convertToType(data['num_matching_ingredients'], 'Integer');
      }
      if (data.hasOwnProperty('num_missing_ingredients')) {
        obj['num_missing_ingredients'] = ApiClient.convertToType(data['num_missing_ingredients'], 'Integer');
      }
      if (data.hasOwnProperty('unique_url_id')) {
        obj['unique_url_id'] = ApiClient.convertToType(data['unique_url_id'], 'Integer');
      }
      if (data.hasOwnProperty('unique_url_name')) {
        obj['unique_url_name'] = ApiClient.convertToType(data['unique_url_name'], 'String');
      }
      if (data.hasOwnProperty('added')) {
        obj['added'] = ApiClient.convertToType(data['added'], 'Integer');
      }
      if (data.hasOwnProperty('average_rating')) {
        obj['average_rating'] = ApiClient.convertToType(data['average_rating'], 'Number');
      }
      if (data.hasOwnProperty('best_rating')) {
        obj['best_rating'] = ApiClient.convertToType(data['best_rating'], 'Number');
      }
      if (data.hasOwnProperty('categories')) {
        obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
      }
      if (data.hasOwnProperty('category')) {
        obj['category'] = ApiClient.convertToType(data['category'], 'String');
      }
      if (data.hasOwnProperty('cook_time')) {
        obj['cook_time'] = ApiClient.convertToType(data['cook_time'], 'Number');
      }
      if (data.hasOwnProperty('creator')) {
        obj['creator'] = ApiClient.convertToType(data['creator'], 'String');
      }
      if (data.hasOwnProperty('cuisine')) {
        obj['cuisine'] = ApiClient.convertToType(data['cuisine'], 'String');
      }
      if (data.hasOwnProperty('Description')) {
        obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
      }
      if (data.hasOwnProperty('food_ids')) {
        obj['food_ids'] = ApiClient.convertToType(data['food_ids'], ['Integer']);
      }
      if (data.hasOwnProperty('food_names')) {
        obj['food_names'] = ApiClient.convertToType(data['food_names'], {'String': 'String'});
      }
      if (data.hasOwnProperty('image_url')) {
        obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
      }
      if (data.hasOwnProperty('info')) {
        obj['info'] = ApiClient.convertToType(data['info'], 'String');
      }
      if (data.hasOwnProperty('ingredient_common_names')) {
        obj['ingredient_common_names'] = ApiClient.convertToType(data['ingredient_common_names'], ['String']);
      }
      if (data.hasOwnProperty('ingredients')) {
        obj['ingredients'] = ApiClient.convertToType(data['ingredients'], 'String');
      }
      if (data.hasOwnProperty('instructions')) {
        obj['instructions'] = ApiClient.convertToType(data['instructions'], 'String');
      }
      if (data.hasOwnProperty('meal_type')) {
        obj['meal_type'] = ApiClient.convertToType(data['meal_type'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('num_ingredients')) {
        obj['num_ingredients'] = ApiClient.convertToType(data['num_ingredients'], 'Integer');
      }
      if (data.hasOwnProperty('nutrition')) {
        obj['nutrition'] = ApiClient.convertToType(data['nutrition'], [IngredientWithNutritionAbbrev]);
      }
      if (data.hasOwnProperty('nutrition_per_portion')) {
        obj['nutrition_per_portion'] = RecipeNutritionAbbrev.constructFromObject(data['nutrition_per_portion']);
      }
      if (data.hasOwnProperty('oid')) {
        obj['oid'] = ApiClient.convertToType(data['oid'], 'String');
      }
      if (data.hasOwnProperty('owner_id')) {
        obj['owner_id'] = ApiClient.convertToType(data['owner_id'], 'Integer');
      }
      if (data.hasOwnProperty('portions')) {
        obj['portions'] = ApiClient.convertToType(data['portions'], 'Integer');
      }
      if (data.hasOwnProperty('prep_time')) {
        obj['prep_time'] = ApiClient.convertToType(data['prep_time'], 'Number');
      }
      if (data.hasOwnProperty('provides')) {
        obj['provides'] = CountryRDA.constructFromObject(data['provides']);
      }
      if (data.hasOwnProperty('rating')) {
        obj['rating'] = ApiClient.convertToType(data['rating'], 'Number');
      }
      if (data.hasOwnProperty('rating_count')) {
        obj['rating_count'] = ApiClient.convertToType(data['rating_count'], 'Integer');
      }
      if (data.hasOwnProperty('recipe_id')) {
        obj['recipe_id'] = ApiClient.convertToType(data['recipe_id'], 'Integer');
      }
      if (data.hasOwnProperty('recipe_yield')) {
        obj['recipe_yield'] = ApiClient.convertToType(data['recipe_yield'], 'String');
      }
      if (data.hasOwnProperty('scratch')) {
        obj['scratch'] = ApiClient.convertToType(data['scratch'], 'Boolean');
      }
      if (data.hasOwnProperty('source')) {
        obj['source'] = ApiClient.convertToType(data['source'], 'String');
      }
      if (data.hasOwnProperty('unique_name')) {
        obj['unique_name'] = ApiClient.convertToType(data['unique_name'], 'String');
      }
      if (data.hasOwnProperty('url')) {
        obj['url'] = ApiClient.convertToType(data['url'], 'String');
      }
      if (data.hasOwnProperty('worst_rating')) {
        obj['worst_rating'] = ApiClient.convertToType(data['worst_rating'], 'Number');
      }
    }
    return obj;
  }

  /**
   * An internally used int by the system to decide what extra data should be attached to this recipe object (such as nutrition, GDA, nutrition per portion etc)
   * @member {Integer} internal_preload_options
   */
  exports.prototype['internal_preload_options'] = undefined;
  /**
   * Only used when searching for recipes by food id. This value will show how many of the foods in the search are present in this recipe.
   * @member {Integer} num_matching_ingredients
   */
  exports.prototype['num_matching_ingredients'] = undefined;
  /**
   * Only used when searching for recipes by food id. This value will show how many of the foods in the search are missing from this recipe.
   * @member {Integer} num_missing_ingredients
   */
  exports.prototype['num_missing_ingredients'] = undefined;
  /**
   * @member {Integer} unique_url_id
   */
  exports.prototype['unique_url_id'] = undefined;
  /**
   * @member {String} unique_url_name
   */
  exports.prototype['unique_url_name'] = undefined;
  /**
   * @member {Integer} added
   */
  exports.prototype['added'] = undefined;
  /**
   * @member {Number} average_rating
   */
  exports.prototype['average_rating'] = undefined;
  /**
   * @member {Number} best_rating
   */
  exports.prototype['best_rating'] = undefined;
  /**
   * @member {Array.<String>} categories
   */
  exports.prototype['categories'] = undefined;
  /**
   * @member {String} category
   */
  exports.prototype['category'] = undefined;
  /**
   * @member {Number} cook_time
   */
  exports.prototype['cook_time'] = undefined;
  /**
   * @member {String} creator
   */
  exports.prototype['creator'] = undefined;
  /**
   * @member {String} cuisine
   */
  exports.prototype['cuisine'] = undefined;
  /**
   * @member {String} Description
   */
  exports.prototype['Description'] = undefined;
  /**
   * @member {Array.<Integer>} food_ids
   */
  exports.prototype['food_ids'] = undefined;
  /**
   * @member {Object.<String, String>} food_names
   */
  exports.prototype['food_names'] = undefined;
  /**
   * @member {String} image_url
   */
  exports.prototype['image_url'] = undefined;
  /**
   * @member {String} info
   */
  exports.prototype['info'] = undefined;
  /**
   * @member {Array.<String>} ingredient_common_names
   */
  exports.prototype['ingredient_common_names'] = undefined;
  /**
   * @member {String} ingredients
   */
  exports.prototype['ingredients'] = undefined;
  /**
   * @member {String} instructions
   */
  exports.prototype['instructions'] = undefined;
  /**
   * @member {String} meal_type
   */
  exports.prototype['meal_type'] = undefined;
  /**
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * @member {Integer} num_ingredients
   */
  exports.prototype['num_ingredients'] = undefined;
  /**
   * A list of the ingredients in a recipe, including the nutritional information of each ingredient. Note: This will only appear in a recipe object when the /nutrition endpoint is present in the API request for the recipe object
   * @member {Array.<module:model/IngredientWithNutritionAbbrev>} nutrition
   */
  exports.prototype['nutrition'] = undefined;
  /**
   * @member {module:model/RecipeNutritionAbbrev} nutrition_per_portion
   */
  exports.prototype['nutrition_per_portion'] = undefined;
  /**
   * @member {String} oid
   */
  exports.prototype['oid'] = undefined;
  /**
   * @member {Integer} owner_id
   */
  exports.prototype['owner_id'] = undefined;
  /**
   * @member {Integer} portions
   */
  exports.prototype['portions'] = undefined;
  /**
   * @member {Number} prep_time
   */
  exports.prototype['prep_time'] = undefined;
  /**
   * @member {module:model/CountryRDA} provides
   */
  exports.prototype['provides'] = undefined;
  /**
   * @member {Number} rating
   */
  exports.prototype['rating'] = undefined;
  /**
   * @member {Integer} rating_count
   */
  exports.prototype['rating_count'] = undefined;
  /**
   * @member {Integer} recipe_id
   */
  exports.prototype['recipe_id'] = undefined;
  /**
   * @member {String} recipe_yield
   */
  exports.prototype['recipe_yield'] = undefined;
  /**
   * @member {Boolean} scratch
   */
  exports.prototype['scratch'] = undefined;
  /**
   * @member {String} source
   */
  exports.prototype['source'] = undefined;
  /**
   * @member {String} unique_name
   */
  exports.prototype['unique_name'] = undefined;
  /**
   * @member {String} url
   */
  exports.prototype['url'] = undefined;
  /**
   * @member {Number} worst_rating
   */
  exports.prototype['worst_rating'] = undefined;



  return exports;
}));


