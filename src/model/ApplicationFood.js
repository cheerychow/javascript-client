/**
 * Cheery Chow Recipe API
 * Nutrition and recipe nutrition management API.
 *
 * OpenAPI spec version: 0.0.2
 * Contact: john@cheerychow.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.CheeryChowRecipeApi) {
      root.CheeryChowRecipeApi = {};
    }
    root.CheeryChowRecipeApi.ApplicationFood = factory(root.CheeryChowRecipeApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The ApplicationFood model module.
   * @module model/ApplicationFood
   * @version 0.0.2
   */

  /**
   * Constructs a new <code>ApplicationFood</code>.
   * @alias module:model/ApplicationFood
   * @class
   */
  var exports = function() {
    var _this = this;























  };

  /**
   * Constructs a <code>ApplicationFood</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ApplicationFood} obj Optional instance to populate.
   * @return {module:model/ApplicationFood} The populated <code>ApplicationFood</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('regex_id')) {
        obj['regex_id'] = ApiClient.convertToType(data['regex_id'], 'Number');
      }
      if (data.hasOwnProperty('food_id')) {
        obj['food_id'] = ApiClient.convertToType(data['food_id'], 'Number');
      }
      if (data.hasOwnProperty('group_id')) {
        obj['group_id'] = ApiClient.convertToType(data['group_id'], 'Number');
      }
      if (data.hasOwnProperty('regex')) {
        obj['regex'] = ApiClient.convertToType(data['regex'], 'String');
      }
      if (data.hasOwnProperty('common_name')) {
        obj['common_name'] = ApiClient.convertToType(data['common_name'], 'String');
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Number');
      }
      if (data.hasOwnProperty('in_usda')) {
        obj['in_usda'] = ApiClient.convertToType(data['in_usda'], 'Number');
      }
      if (data.hasOwnProperty('high_generality')) {
        obj['high_generality'] = ApiClient.convertToType(data['high_generality'], 'Number');
      }
      if (data.hasOwnProperty('priority')) {
        obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
      }
      if (data.hasOwnProperty('default_amount')) {
        obj['default_amount'] = ApiClient.convertToType(data['default_amount'], 'Number');
      }
      if (data.hasOwnProperty('zero_cal')) {
        obj['zero_cal'] = ApiClient.convertToType(data['zero_cal'], 'Number');
      }
      if (data.hasOwnProperty('alcohol')) {
        obj['alcohol'] = ApiClient.convertToType(data['alcohol'], 'Boolean');
      }
      if (data.hasOwnProperty('meat')) {
        obj['meat'] = ApiClient.convertToType(data['meat'], 'Boolean');
      }
      if (data.hasOwnProperty('nut')) {
        obj['nut'] = ApiClient.convertToType(data['nut'], 'Boolean');
      }
      if (data.hasOwnProperty('egg')) {
        obj['egg'] = ApiClient.convertToType(data['egg'], 'Boolean');
      }
      if (data.hasOwnProperty('sugar')) {
        obj['sugar'] = ApiClient.convertToType(data['sugar'], 'Boolean');
      }
      if (data.hasOwnProperty('vegan')) {
        obj['vegan'] = ApiClient.convertToType(data['vegan'], 'Boolean');
      }
      if (data.hasOwnProperty('veg')) {
        obj['veg'] = ApiClient.convertToType(data['veg'], 'Boolean');
      }
      if (data.hasOwnProperty('gluten_free')) {
        obj['gluten_free'] = ApiClient.convertToType(data['gluten_free'], 'Boolean');
      }
      if (data.hasOwnProperty('Fish')) {
        obj['Fish'] = ApiClient.convertToType(data['Fish'], 'Boolean');
      }
      if (data.hasOwnProperty('units_regex')) {
        obj['units_regex'] = ApiClient.convertToType(data['units_regex'], 'String');
      }
      if (data.hasOwnProperty('temp_hits')) {
        obj['temp_hits'] = ApiClient.convertToType(data['temp_hits'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * @member {Number} regex_id
   */
  exports.prototype['regex_id'] = undefined;
  /**
   * @member {Number} food_id
   */
  exports.prototype['food_id'] = undefined;
  /**
   * @member {Number} group_id
   */
  exports.prototype['group_id'] = undefined;
  /**
   * @member {String} regex
   */
  exports.prototype['regex'] = undefined;
  /**
   * @member {String} common_name
   */
  exports.prototype['common_name'] = undefined;
  /**
   * @member {Number} active
   */
  exports.prototype['active'] = undefined;
  /**
   * @member {Number} in_usda
   */
  exports.prototype['in_usda'] = undefined;
  /**
   * @member {Number} high_generality
   */
  exports.prototype['high_generality'] = undefined;
  /**
   * @member {Number} priority
   */
  exports.prototype['priority'] = undefined;
  /**
   * @member {Number} default_amount
   */
  exports.prototype['default_amount'] = undefined;
  /**
   * @member {Number} zero_cal
   */
  exports.prototype['zero_cal'] = undefined;
  /**
   * @member {Boolean} alcohol
   */
  exports.prototype['alcohol'] = undefined;
  /**
   * @member {Boolean} meat
   */
  exports.prototype['meat'] = undefined;
  /**
   * @member {Boolean} nut
   */
  exports.prototype['nut'] = undefined;
  /**
   * @member {Boolean} egg
   */
  exports.prototype['egg'] = undefined;
  /**
   * @member {Boolean} sugar
   */
  exports.prototype['sugar'] = undefined;
  /**
   * @member {Boolean} vegan
   */
  exports.prototype['vegan'] = undefined;
  /**
   * @member {Boolean} veg
   */
  exports.prototype['veg'] = undefined;
  /**
   * @member {Boolean} gluten_free
   */
  exports.prototype['gluten_free'] = undefined;
  /**
   * @member {Boolean} Fish
   */
  exports.prototype['Fish'] = undefined;
  /**
   * @member {String} units_regex
   */
  exports.prototype['units_regex'] = undefined;
  /**
   * @member {Integer} temp_hits
   */
  exports.prototype['temp_hits'] = undefined;



  return exports;
}));


